"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4785],{2889:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-bc0867e6",path:"/guide/services/error_logger.html",title:"Error Logger",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/error_logger.md",git:{updatedTime:1634291321e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1}]}}},682:(n,s,e)=>{e.r(s),e.d(s,{default:()=>r});const a=(0,e(6252).uE)('<h1 id="error-logger" tabindex="-1"><a class="header-anchor" href="#error-logger" aria-hidden="true">#</a> Error Logger</h1><p>Used to save unhandled errors in error log. Hitrix use <code>recovery</code> function to handle those errors. If you setup Slack service you also going to receive notifications in your slack</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderErrorLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ErrorLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>It can be used to save custom errors as well:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>        errorLoggerService <span class="token operator">:=</span> ioc<span class="token punctuation">.</span><span class="token function">GetErrorLoggerService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t\n\t\terrorLoggerService<span class="token punctuation">.</span><span class="token function">LogErrorWithRequest</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">//if you provide context we will save request body as well</span>\n\t\terrorLoggerService<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',8),o={},r=(0,e(3744).Z)(o,[["render",function(n,s){return a}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[e,a]of s)n[e]=a;return n}}}]);