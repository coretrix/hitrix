"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[838],{184:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1229168e",path:"/guide/services/kubernetes.html",title:"Kubernetes",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/kubernetes.md",git:{updatedTime:1656076836e3,contributors:[{name:"Masih Yeganeh",email:"goodboy.php@gmail.com",commits:1}]}}},6444:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var e=a(6252);const t=(0,e.uE)('<h1 id="kubernetes" tabindex="-1"><a class="header-anchor" href="#kubernetes" aria-hidden="true">#</a> Kubernetes</h1><p>This service is used for calling Kubernetes APIs.<br> Currently, this service can be used to add other domains to Kubernetes Ingresses and handling certification generation with cert-manager.</p><p>To use this, register the service into your <code>main.go</code> file first:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderKubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>and you should put your credentials and other configs in your config file</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">kubernetes</span><span class="token punctuation">:</span>\n  <span class="token key atrule">environment</span><span class="token punctuation">:</span> <span class="token string">&quot;dev&quot;</span>\n  <span class="token key atrule">config_file</span><span class="token punctuation">:</span> <span class="token string">&quot;/path/to/kubeconfig&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>the <code>config_file</code> can be one of these:</p>',7),o=(0,e._)("li",null,"absolute path to config file",-1),p=(0,e._)("li",null,"relative path to config file - then address of config directory will be prepended to it",-1),c=(0,e.Uk)("can be omitted completely - then Kubernetes in-cluster config of "),i={href:"https://kubernetes.io/docs/admin/authentication/#service-account-tokens",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("Service Account Token"),l=(0,e.Uk)(" will be used"),r=(0,e.uE)('<p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Kubernetes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Some functions this service provide are:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>\t<span class="token function">GetIngressDomains</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n\t<span class="token function">AddIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> secretName<span class="token punctuation">,</span> serviceName<span class="token punctuation">,</span> servicePortName <span class="token builtin">string</span><span class="token punctuation">,</span> annotations <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>\n   \t<span class="token function">RemoveIngress</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> domain <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>\n   \t<span class="token function">IsCertificateProvisioned</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> secretName <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',4),k={},d=(0,a(3744).Z)(k,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[o,p,(0,e._)("li",null,[c,(0,e._)("a",i,[u,(0,e.Wm)(a)]),l])]),r],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);