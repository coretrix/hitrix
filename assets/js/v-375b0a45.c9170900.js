"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9263],{9922:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-375b0a45",path:"/guide/services/sms.html",title:"SMS Service",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/sms.md",git:{updatedTime:168554389e4,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:5},{name:"Iliyan",email:"iliyan.motovski@coretrix.com",commits:1}]}}},1994:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="sms-service" tabindex="-1"><a class="header-anchor" href="#sms-service" aria-hidden="true">#</a> SMS Service</h1><p>This service is capable of sending sms messages using different providers . We supports next providers <code>twilio</code> <code>sinch</code> <code>kavenegar</code> <code>link mobility</code> <code>mobica</code></p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderSMS</span><span class="token punctuation">(</span>sms<span class="token punctuation">.</span>NewTwilioProvider<span class="token punctuation">,</span> sms<span class="token punctuation">.</span>NewSinchProvider<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies" aria-hidden="true">#</a> Dependencies :</h5><p><code>ClockService</code>, <code>ORMConfigService</code></p><p>Every request is saved in SmsTrackerEntity. So you will be able to track every sms</p><p>We support defining <code>primary</code> and <code>secondary</code> providers. If primary fails we try to send a message with the secondary provider.</p><p>We can set default providers and providers per message as well</p><p>Default providers are set at <code>ServiceProviderSMS()</code> Providers per message are set at <code>SendMessage()</code></p><p>The method <code>SendMessage</code> used to send simple message</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Message <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tText     <span class="token builtin">string</span>\n\tNumber   <span class="token builtin">string</span>\n\tProvider <span class="token operator">*</span>Provider\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="configs" tabindex="-1"><a class="header-anchor" href="#configs" aria-hidden="true">#</a> configs</h5><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">sms</span><span class="token punctuation">:</span>\n  <span class="token key atrule">sandbox_mode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n  <span class="token key atrule">twilio</span><span class="token punctuation">:</span>\n    <span class="token key atrule">sid</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_TWILIO_SID<span class="token punctuation">]</span>\n    <span class="token key atrule">token</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_TWILIO_TOKEN<span class="token punctuation">]</span>\n    <span class="token key atrule">from_number</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_TWILIO_FROM_NUMBER<span class="token punctuation">]</span>\n  <span class="token key atrule">kavenegar</span><span class="token punctuation">:</span>\n    <span class="token key atrule">api_key</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_KAVENEGAR_API_KEY<span class="token punctuation">]</span>\n    <span class="token key atrule">sender</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_KAVENEGAR_SENDER<span class="token punctuation">]</span>\n  <span class="token key atrule">sinch</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app_id</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_SINCH_APP_ID<span class="token punctuation">]</span>\n    <span class="token key atrule">app_secret</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_SINCH_APP_SECRET<span class="token punctuation">]</span>\n    <span class="token key atrule">msg_url</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_SINCH_MSG_URL<span class="token punctuation">]</span>\n    <span class="token key atrule">from_number</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_SINCH_FROM_NUMBER<span class="token punctuation">]</span>\n  <span class="token key atrule">mobica</span><span class="token punctuation">:</span>\n    <span class="token key atrule">email</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_MOBICA_EMAIL<span class="token punctuation">]</span>\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_MOBICA_PASSWORD<span class="token punctuation">]</span>\n    <span class="token key atrule">route</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_MOBICA_ROUTE<span class="token punctuation">]</span>\n    <span class="token key atrule">from</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_MOBICA_FROM<span class="token punctuation">]</span>\n    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_MOBICA_ENDPOINT<span class="token punctuation">]</span>\n  <span class="token key atrule">link_mobility</span><span class="token punctuation">:</span>\n    <span class="token key atrule">service</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_LINK_MOBILITY_SERVICE<span class="token punctuation">]</span>\n    <span class="token key atrule">key</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_LINK_MOBILITY_KEY<span class="token punctuation">]</span>\n    <span class="token key atrule">secret</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_LINK_MOBILITY_SECRET<span class="token punctuation">]</span>\n    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_LINK_MOBILITY_ENDPOINT<span class="token punctuation">]</span>\n    <span class="token key atrule">shortcode</span><span class="token punctuation">:</span> ENV<span class="token punctuation">[</span>SMS_LINK_MOBILITY_SHORTCODE<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>If you set <code>sandbox_mode=true</code> we won&#39;t send real sms to the customer</p>',17),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);