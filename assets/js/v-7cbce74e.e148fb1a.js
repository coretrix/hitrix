"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4779],{733:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7cbce74e",path:"/guide/services/checkout.html",title:"Checkout.com API",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/checkout.md",git:{updatedTime:1635507123e3,contributors:[{name:"Iman Daneshi",email:"emandaneshikohan@gmail.com",commits:2},{name:"Saman Shahroudi",email:"shahroudi.dev@gmail.com",commits:1}]}}},4932:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="checkout-com-api" tabindex="-1"><a class="header-anchor" href="#checkout-com-api" aria-hidden="true">#</a> Checkout.com API</h1><p>This service is used to create a payment, check webhook key, request a refund and manage user cards for checkout.com payment API</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>hitrixRegistry<span class="token punctuation">.</span><span class="token function">ServiceProviderCheckout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>And you should put your credentials and other configs in <code>config/hitrix.yml</code></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">checkout</span><span class="token punctuation">:</span>\n  <span class="token key atrule">secret_key</span><span class="token punctuation">:</span> secret\n  <span class="token key atrule">public_key</span><span class="token punctuation">:</span> public\n  <span class="token key atrule">currency</span><span class="token punctuation">:</span> USD\n  <span class="token key atrule">webhook_keys</span><span class="token punctuation">:</span>\n    <span class="token key atrule">main</span><span class="token punctuation">:</span> somekey\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>checkoutService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Checkout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Using the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Request a payment</span>\ncheckoutService<span class="token punctuation">.</span><span class="token function">RequestPayment</span><span class="token punctuation">(</span>\n    payments<span class="token punctuation">.</span>IDSource<span class="token punctuation">{</span>\n        Type<span class="token punctuation">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>\n        ID<span class="token punctuation">:</span>  <span class="token string">&quot;sometoken&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;USD&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Order-1000&quot;</span><span class="token punctuation">,</span>\n    <span class="token operator">&amp;</span>payments<span class="token punctuation">.</span>Customer<span class="token punctuation">{</span>Email<span class="token punctuation">:</span> <span class="token string">&quot;email@email.com&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;OrderId&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Order-1000&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n      \n<span class="token comment">// Request a refund</span>\ncheckoutService<span class="token punctuation">.</span><span class="token function">RequestRefunds</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;PaymentId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Order-1000&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;OrderId&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Order-1000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;RefundsID&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Order-1000&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n      \n<span class="token comment">// Validating incoming webhook</span>\ncheckoutService<span class="token punctuation">.</span><span class="token function">CheckWebhookKey</span><span class="token punctuation">(</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value of Authorization header&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Get user cards</span>\ncheckoutService<span class="token punctuation">.</span><span class="token function">GetCustomerInstruments</span><span class="token punctuation">(</span><span class="token string">&quot;cus_someid&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Delete user card</span>\ncheckoutService<span class="token punctuation">.</span><span class="token function">DeleteCustomerInstrument</span><span class="token punctuation">(</span><span class="token string">&quot;src_someid&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>',10),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);