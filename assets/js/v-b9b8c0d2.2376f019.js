"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7698],{6807:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-b9b8c0d2",path:"/guide/services/jwt.html",title:"JWT",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/jwt.md",git:{updatedTime:1634291321e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1}]}}},7809:(n,e,s)=>{s.r(e),s.d(e,{default:()=>c});const a=(0,s(6252).uE)('<h1 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt" aria-hidden="true">#</a> JWT</h1><p>You can use that service to encode and decode JWT tokens</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>registry<span class="token punctuation">.</span><span class="token function">ServiceProviderJWT</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">JWT</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',6),t={},c=(0,s(3744).Z)(t,[["render",function(n,e){return a}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[s,a]of e)n[s]=a;return n}}}]);