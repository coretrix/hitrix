"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1308],{9796:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-94709e56",path:"/guide/features/seeder.html",title:"Database Seeding",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/features/seeder.md",git:{updatedTime:1641372375e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:2}]}}},3137:(n,s,a)=>{a.r(s),a.d(s,{default:()=>S});var e=a(6252);const p=(0,e._)("h1",{id:"database-seeding",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#database-seeding","aria-hidden":"true"},"#"),(0,e.Uk)(" Database Seeding")],-1),t=(0,e._)("p",null,"Hitrix supports seeds that can be used to populate database or apply changes on it.",-1),o=(0,e.Uk)("To Seed your database ("),c={href:"https://en.wikipedia.org/wiki/Database_seeding",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("wiki"),i=(0,e.Uk)("), you can use the seeding feature that is implemented as script ("),l=(0,e._)("code",null,"DBSeedScript",-1),r=(0,e.Uk)("). This "),k=(0,e._)("code",null,"DBSeedScript",-1),d=(0,e.Uk)(" needs to be provided a "),b=(0,e._)("code",null,"Seeds map[string][]Seed",-1),m=(0,e.Uk)(" field, Where the string key is the identifier of the project that is used. This measn you can have different project in one code base The Script can be implemented in your app by making a type that satisfies the "),g=(0,e._)("code",null,"Seed",-1),h=(0,e.Uk)(" interface:"),f=(0,e.uE)('<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Seed <span class="token keyword">interface</span> <span class="token punctuation">{</span>\n    <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token operator">*</span>beeorm<span class="token punctuation">.</span>Engine<span class="token punctuation">)</span>\n    <span class="token function">Environments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>\n    <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Example:</p><p><code>users_seed.go</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> UsersSeed <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token punctuation">(</span>seed <span class="token operator">*</span>UsersSeed<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;UsersSeed&quot;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token punctuation">(</span>seed <span class="token operator">*</span>UsersSeed<span class="token punctuation">)</span> <span class="token function">Environments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>app<span class="token punctuation">.</span>ModeTest<span class="token punctuation">,</span> app<span class="token punctuation">.</span>ModeLocal<span class="token punctuation">,</span> app<span class="token punctuation">.</span>ModeDev<span class="token punctuation">,</span> app<span class="token punctuation">.</span>ModeDemo<span class="token punctuation">,</span> app<span class="token punctuation">.</span>ModeProd<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token punctuation">(</span>seed <span class="token operator">*</span>UsersSeed<span class="token punctuation">)</span> <span class="token function">Execute</span><span class="token punctuation">(</span>ormService <span class="token operator">*</span>beeorm<span class="token punctuation">.</span>Engine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// TODO insert a new user entity to the db</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>And after your server definition (such as the one in <a href="example/server.go">server.go</a>), you could use it to run the seeds just like you would run any script (explained earlier in the <a href="#running-scripts">scripts seciton</a>) as follows:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Server Definition</span>\ns<span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> hitrix<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token operator">...</span>\n\ns<span class="token punctuation">.</span><span class="token function">RunBackgroundProcess</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>hitrix<span class="token punctuation">.</span>BackgroundProcessor<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// seed database</span>\n  <span class="token keyword">go</span> b<span class="token punctuation">.</span><span class="token function">RunScript</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hitrixScripts<span class="token punctuation">.</span>DBSeedScript<span class="token punctuation">{</span>\n    SeedsPerProject<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>hitrixScripts<span class="token punctuation">.</span>Seed<span class="token punctuation">{</span>\n        <span class="token string">&quot;project_name&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token operator">&amp;</span>script<span class="token punctuation">.</span>UserProfileAttributesSeed<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// ... other scripts</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>This seed will only run if no seeds has ever been ran with that name (in db table seeder, no row with <code>&#39;name&#39;=&#39;UsersSeed&#39;</code> )</p>',7),y={},S=(0,a(3744).Z)(y,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,t,(0,e._)("p",null,[o,(0,e._)("a",c,[u,(0,e.Wm)(a)]),i,l,r,k,d,b,m,g,h]),f],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);