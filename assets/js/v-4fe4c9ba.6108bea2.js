"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4114],{381:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-4fe4c9ba",path:"/guide/services/geocoding.html",title:"Geocoding",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/geocoding.md",git:{updatedTime:1689281472e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:2},{name:"Krasimir Ivanov",email:"krasimir.ivanov@coretrix.com",commits:1}]}}},6644:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="geocoding" tabindex="-1"><a class="header-anchor" href="#geocoding" aria-hidden="true">#</a> Geocoding</h1><p>This service is used for geocoding and reverse geocoding. It supports multiple providers. For now only Google Maps provider is implemented.</p><p>You should put your api key from Google Maps in config:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">geocoding</span><span class="token punctuation">:</span>\n  <span class="token key atrule">use_caching</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token key atrule">cache_ttl_min_days</span><span class="token punctuation">:</span> <span class="token number">5</span>\n  <span class="token key atrule">cache_ttl_max_days</span><span class="token punctuation">:</span> <span class="token number">10</span>\n  <span class="token key atrule">google_maps</span><span class="token punctuation">:</span>\n    <span class="token key atrule">api_key</span><span class="token punctuation">:</span> some_key\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Note 1: if you decide to use caching functionality, you need to run script <code>ClearExpiredGeocodingCache</code> in your project. This script will delete expired cache.</p><p>Note 2: if you decide to use caching functionality, lat/lng are cut (not rounded) to 5 decimal place</p><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Geocoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>The service exposes 3 methods that you can use:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> IGeocoding <span class="token keyword">interface</span> <span class="token punctuation">{</span>\n\t<span class="token function">Geocode</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> ormService <span class="token operator">*</span>beeorm<span class="token punctuation">.</span>Engine<span class="token punctuation">,</span> address <span class="token builtin">string</span><span class="token punctuation">,</span> language Language<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Address<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n\t<span class="token function">ReverseGeocode</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> ormService <span class="token operator">*</span>beeorm<span class="token punctuation">.</span>Engine<span class="token punctuation">,</span> latLng <span class="token operator">*</span>LatLng<span class="token punctuation">,</span> language Language<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Address<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n    <span class="token function">CutCoordinates</span><span class="token punctuation">(</span>float <span class="token builtin">float64</span><span class="token punctuation">,</span> precision <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">float64</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',10),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);