"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[880],{7369:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-17b1b5ba",path:"/guide/features/goroutine.html",title:"Goroutine",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/features/goroutine.md",git:{updatedTime:163482546e4,contributors:[{name:"majid mohsenifar",email:"majid.mohsenifar@coretrix.com",commits:1}]}}},489:(n,a,s)=>{s.r(a),s.d(a,{default:()=>o});const e=(0,s(6252).uE)('<h1 id="goroutine" tabindex="-1"><a class="header-anchor" href="#goroutine" aria-hidden="true">#</a> Goroutine</h1><p>Go provides simple solution for concurrency using go keyword, but in any case that goroutine panics you have to handle that yourself. Hitrix provides <code>Goroutine</code> function that does this automatically for you and you don&#39;t have to be worry about your goroutine panic. Hitrix Goroutine function would recover the panic for you and log the error. You can use that like this:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> mypackage\n\n<span class="token keyword">import</span> <span class="token string">&quot;github.com/coretrix/hitrix&quot;</span>\n\n<span class="token keyword">func</span> <span class="token function">Myfunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  hitrix<span class="token punctuation">.</span><span class="token function">Goroutine</span><span class="token punctuation">(</span><span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Hitrix also provides another function named <code>GoroutineWithRestart</code>. If you have a function that must be run all the time you can use this function. In any case of panics it would log the error and automatically start the function again. You can use this function like this:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> mypackage\n\n<span class="token keyword">import</span> <span class="token string">&quot;github.com/coretrix/hitrix&quot;</span>\n\n<span class="token keyword">func</span> <span class="token function">Myfunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  hitrix<span class="token punctuation">.</span><span class="token function">GoroutineWithRestart</span><span class="token punctuation">(</span><span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',5),t={},o=(0,s(3744).Z)(t,[["render",function(n,a){return e}]])},3744:(n,a)=>{a.Z=(n,a)=>{for(const[s,e]of a)n[s]=e;return n}}}]);