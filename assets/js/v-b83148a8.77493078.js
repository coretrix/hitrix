"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[795],{3981:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-b83148a8",path:"/guide/services/elorus.html",title:"Elorus.com API",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/services/elorus.md",git:{updatedTime:1646129473e3,contributors:[{name:"mahya.ghadiri",email:"mahya.ghadiri@snapp.cab",commits:2}]}}},5479:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="elorus-com-api" tabindex="-1"><a class="header-anchor" href="#elorus-com-api" aria-hidden="true">#</a> Elorus.com API</h1><p>This service is used to access Elorus platform, for creating and managing invoices</p><p>Register the service into your <code>main.go</code> file:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>hitrixRegistry<span class="token punctuation">.</span><span class="token function">ServiceProviderElorus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>And you should put your credentials and other configs in <code>config/hitrix.yml</code></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">elorus</span><span class="token punctuation">:</span>\n  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//api.elorus.com/v1.1\n  <span class="token key atrule">token</span><span class="token punctuation">:</span> secret\n  <span class="token key atrule">organization_id</span><span class="token punctuation">:</span> secret\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Access the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>elorusService <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">DI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Elorus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Using the service:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Request to create contact</span>\nelorusService<span class="token punctuation">.</span><span class="token function">CreateContact</span><span class="token punctuation">(</span>\n    elorus<span class="token punctuation">.</span>CreateContactRequest<span class="token punctuation">{</span>\n        FirstName<span class="token punctuation">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>\n        Active<span class="token punctuation">:</span>  <span class="token boolean">true</span><span class="token punctuation">,</span>\n        Company<span class="token punctuation">:</span><span class="token string">&quot;company&quot;</span><span class="token punctuation">,</span>\n        VatNumber<span class="token punctuation">:</span><span class="token string">&quot;BG108&quot;</span>\n        Email<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>   \n        \tEmail   <span class="token builtin">string</span> <span class="token string">`json:&quot;email&quot;`</span>\n            Primary <span class="token builtin">bool</span>   <span class="token string">`json:&quot;primary&quot;`</span>\n        <span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            Email<span class="token punctuation">:</span>  <span class="token string">&quot;email@email.com&quot;</span><span class="token punctuation">,</span>\n            Primary<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        Phones<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>\n            Number  <span class="token builtin">string</span> <span class="token string">`json:&quot;number&quot;`</span>\n            Primary <span class="token builtin">bool</span>   <span class="token string">`json:&quot;primary&quot;`</span>\n        <span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            Number<span class="token punctuation">:</span>  <span class="token string">&quot;0869586598&quot;</span><span class="token punctuation">,</span>\n            Primary<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        \n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n      \n<span class="token comment">// Request to create invoice</span>\nelorusService<span class="token punctuation">.</span><span class="token function">CreateInvoice</span><span class="token punctuation">(</span>\n\telorus<span class="token punctuation">.</span>CreateInvoiceRequest<span class="token punctuation">{</span>\n        Date<span class="token punctuation">:</span>              time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        Client<span class="token punctuation">:</span>            contactId<span class="token punctuation">,</span>\n        ClientDisplayName<span class="token punctuation">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>\n        ClientEmail<span class="token punctuation">:</span>       <span class="token string">&quot;email@email.com&quot;</span><span class="token punctuation">,</span>\n        ClientVatNumber<span class="token punctuation">:</span>   <span class="token string">&quot;BG108&quot;</span><span class="token punctuation">,</span>\n        Number<span class="token punctuation">:</span>            <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>\n        Items<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>\n            Title                        <span class="token builtin">string</span>   <span class="token string">`json:&quot;title&quot;`</span>\n            Description                  <span class="token builtin">string</span>   <span class="token string">`json:&quot;description&quot;`</span>\n            Quantity                     <span class="token builtin">string</span>   <span class="token string">`json:&quot;quantity&quot;`</span>\n            UnitMeasure                  <span class="token builtin">int</span>      <span class="token string">`json:&quot;unit_measure&quot;`</span>\n            UnitValue                    <span class="token builtin">string</span>   <span class="token string">`json:&quot;unit_value&quot;`</span>\n            Taxes                        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`json:&quot;Taxes&quot;`</span>\n            UnitTotal                    <span class="token builtin">string</span>   <span class="token string">`json:&quot;unit_total&quot;`</span>\n        <span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            Title<span class="token punctuation">:</span>  <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span>\n            Quantity<span class="token punctuation">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span>\n\t\t\tUnitValue<span class="token punctuation">:</span> <span class="token string">&quot;800&quot;</span><span class="token punctuation">,</span>\n            UnitMeasure<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            UnitTotal<span class="token punctuation">:</span> <span class="token string">&quot;500&quot;</span><span class="token punctuation">,</span>\n            Taxes<span class="token punctuation">:</span>       <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;2416104549958812800&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>     \n\n<span class="token comment">// Request to get invoice list</span>\nelorusService<span class="token punctuation">.</span><span class="token function">GetInvoiceList</span><span class="token punctuation">(</span>\n\telorus<span class="token punctuation">.</span>GetInvoiceListRequest<span class="token punctuation">{</span>\n        Client<span class="token punctuation">:</span>            contactId<span class="token punctuation">,</span>\n        Page<span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n        PageSize<span class="token punctuation">:</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\n<span class="token comment">// Request to get invoice list</span>\nelorusService<span class="token punctuation">.</span><span class="token function">DownloadInvoice</span><span class="token punctuation">(</span>\n\telorus<span class="token punctuation">.</span>DownloadInvoiceRequest<span class="token punctuation">{</span>\n        ID<span class="token punctuation">:</span>            <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div>',10),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);