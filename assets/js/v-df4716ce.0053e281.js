"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9135],{6754:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-df4716ce",path:"/guide/features/pagination.html",title:"Pagination",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/features/pagination.md",git:{updatedTime:1634291321e3,contributors:[{name:"Anton",email:"a.shumansky@gmail.com",commits:1}]}}},9674:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> Pagination</h1><p>You can use:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> helper\n\n<span class="token keyword">type</span> URLQueryPager <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// example = ?current_page=1&amp;page_size=25</span>\n\tCurrentPage <span class="token builtin">int</span> <span class="token string">`binding:&quot;min=1&quot; form:&quot;current_page&quot;`</span>\n\tPageSize    <span class="token builtin">int</span> <span class="token string">`binding:&quot;min=1&quot; form:&quot;page_size&quot;`</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>in your code that needs pagination like:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> mypackage\n\n<span class="token keyword">import</span> <span class="token string">&quot;github.com/coretrix/hitrix/pkg/helper&quot;</span>\n\n<span class="token keyword">type</span> SomeURLQuery <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\thelper<span class="token punctuation">.</span>URLQueryPager\n\tOtherField1 <span class="token builtin">string</span> <span class="token string">`form:&quot;other_field_1&quot;`</span>\n\tOtherField2 <span class="token builtin">int</span> <span class="token string">`form:&quot;other_field_2&quot;`</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',5),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);